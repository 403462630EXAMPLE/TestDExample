(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error("Cannot find module '"+o+"'")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
"use strict";
var fakeData, handleData;

fakeData = function() {
  var testArticle;
  testArticle = {
    content: '<iframe frameborder="0" src="http://v.qq.com/iframe/player.html?vid=y0145ocvgrj&amp;tiny=0&amp;auto=0" allowfullscreen></iframe>'
  };
  return setTimeout(function() {
    return window.YTXBridge.fireEvent('ytx:list:refresh', testArticle);
  }, 200);
};

handleData = function(data) {
  var $iframe, height, marginTop, width;
  ytx.hit(data.id);
  $iframe = $(data.content);
  width = document.body.offsetWidth;
  height = width / 16 * 9;
  marginTop = document.body.offsetHeight / 2 - height / 2;
  $iframe.width(width);
  $iframe.height(height);
  $iframe.css("margin-top", marginTop);
  return $("#app").append($iframe);
};

window.onBridgeReady(function() {
  var articleId;
  articleId = getQueryArgByName("id");
  if (articleId) {
    return $.getJSON("" + serviceUrl.mobile_server + "/api/rest/v2/articles/" + articleId, (function(_this) {
      return function(data) {
        handleData(data.data);
        return renderDownload();
      };
    })(this));
  } else {
    if (env === "development") {
      fakeData();
    }
    return YTXBridge.addEventListener("ytx:list:refresh", function(data, callback) {
      handleData(data);
      return typeof callback === "function" ? callback() : void 0;
    });
  }
});

},{}]},{},[1])
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9Ub21hcy9kZXZlbG9wbWVudC9yamh5L1l0eEFwcC9Nb2JpbGVXZWJhcHBzL25vZGVfbW9kdWxlcy9ndWxwLWJyb3dzZXJpZnkvbm9kZV9tb2R1bGVzL2Jyb3dzZXJpZnkvbm9kZV9tb2R1bGVzL2Jyb3dzZXItcGFjay9fcHJlbHVkZS5qcyIsIi9Vc2Vycy9Ub21hcy9kZXZlbG9wbWVudC9yamh5L1l0eEFwcC9Nb2JpbGVXZWJhcHBzL2FwcC9zY3JpcHRzL2Zha2VfMjgzNDc3MTUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUNBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24gZSh0LG4scil7ZnVuY3Rpb24gcyhvLHUpe2lmKCFuW29dKXtpZighdFtvXSl7dmFyIGE9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtpZighdSYmYSlyZXR1cm4gYShvLCEwKTtpZihpKXJldHVybiBpKG8sITApO3Rocm93IG5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIrbytcIidcIil9dmFyIGY9bltvXT17ZXhwb3J0czp7fX07dFtvXVswXS5jYWxsKGYuZXhwb3J0cyxmdW5jdGlvbihlKXt2YXIgbj10W29dWzFdW2VdO3JldHVybiBzKG4/bjplKX0sZixmLmV4cG9ydHMsZSx0LG4scil9cmV0dXJuIG5bb10uZXhwb3J0c312YXIgaT10eXBlb2YgcmVxdWlyZT09XCJmdW5jdGlvblwiJiZyZXF1aXJlO2Zvcih2YXIgbz0wO288ci5sZW5ndGg7bysrKXMocltvXSk7cmV0dXJuIHN9KSIsIlwidXNlIHN0cmljdFwiO1xudmFyIGZha2VEYXRhLCBoYW5kbGVEYXRhO1xuXG5mYWtlRGF0YSA9IGZ1bmN0aW9uKCkge1xuICB2YXIgdGVzdEFydGljbGU7XG4gIHRlc3RBcnRpY2xlID0ge1xuICAgIGNvbnRlbnQ6ICc8aWZyYW1lIGZyYW1lYm9yZGVyPVwiMFwiIHNyYz1cImh0dHA6Ly92LnFxLmNvbS9pZnJhbWUvcGxheWVyLmh0bWw/dmlkPXkwMTQ1b2N2Z3JqJmFtcDt0aW55PTAmYW1wO2F1dG89MFwiIGFsbG93ZnVsbHNjcmVlbj48L2lmcmFtZT4nXG4gIH07XG4gIHJldHVybiBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiB3aW5kb3cuWVRYQnJpZGdlLmZpcmVFdmVudCgneXR4Omxpc3Q6cmVmcmVzaCcsIHRlc3RBcnRpY2xlKTtcbiAgfSwgMjAwKTtcbn07XG5cbmhhbmRsZURhdGEgPSBmdW5jdGlvbihkYXRhKSB7XG4gIHZhciAkaWZyYW1lLCBoZWlnaHQsIG1hcmdpblRvcCwgd2lkdGg7XG4gIHl0eC5oaXQoZGF0YS5pZCk7XG4gICRpZnJhbWUgPSAkKGRhdGEuY29udGVudCk7XG4gIHdpZHRoID0gZG9jdW1lbnQuYm9keS5vZmZzZXRXaWR0aDtcbiAgaGVpZ2h0ID0gd2lkdGggLyAxNiAqIDk7XG4gIG1hcmdpblRvcCA9IGRvY3VtZW50LmJvZHkub2Zmc2V0SGVpZ2h0IC8gMiAtIGhlaWdodCAvIDI7XG4gICRpZnJhbWUud2lkdGgod2lkdGgpO1xuICAkaWZyYW1lLmhlaWdodChoZWlnaHQpO1xuICAkaWZyYW1lLmNzcyhcIm1hcmdpbi10b3BcIiwgbWFyZ2luVG9wKTtcbiAgcmV0dXJuICQoXCIjYXBwXCIpLmFwcGVuZCgkaWZyYW1lKTtcbn07XG5cbndpbmRvdy5vbkJyaWRnZVJlYWR5KGZ1bmN0aW9uKCkge1xuICB2YXIgYXJ0aWNsZUlkO1xuICBhcnRpY2xlSWQgPSBnZXRRdWVyeUFyZ0J5TmFtZShcImlkXCIpO1xuICBpZiAoYXJ0aWNsZUlkKSB7XG4gICAgcmV0dXJuICQuZ2V0SlNPTihcIlwiICsgc2VydmljZVVybC5tb2JpbGVfc2VydmVyICsgXCIvYXBpL3Jlc3QvdjIvYXJ0aWNsZXMvXCIgKyBhcnRpY2xlSWQsIChmdW5jdGlvbihfdGhpcykge1xuICAgICAgcmV0dXJuIGZ1bmN0aW9uKGRhdGEpIHtcbiAgICAgICAgaGFuZGxlRGF0YShkYXRhLmRhdGEpO1xuICAgICAgICByZXR1cm4gcmVuZGVyRG93bmxvYWQoKTtcbiAgICAgIH07XG4gICAgfSkodGhpcykpO1xuICB9IGVsc2Uge1xuICAgIGlmIChlbnYgPT09IFwiZGV2ZWxvcG1lbnRcIikge1xuICAgICAgZmFrZURhdGEoKTtcbiAgICB9XG4gICAgcmV0dXJuIFlUWEJyaWRnZS5hZGRFdmVudExpc3RlbmVyKFwieXR4Omxpc3Q6cmVmcmVzaFwiLCBmdW5jdGlvbihkYXRhLCBjYWxsYmFjaykge1xuICAgICAgaGFuZGxlRGF0YShkYXRhKTtcbiAgICAgIHJldHVybiB0eXBlb2YgY2FsbGJhY2sgPT09IFwiZnVuY3Rpb25cIiA/IGNhbGxiYWNrKCkgOiB2b2lkIDA7XG4gICAgfSk7XG4gIH1cbn0pO1xuIl19
